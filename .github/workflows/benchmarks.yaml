name: Benchmarks

env:
  PY_COLORS: 1

on:
  pull_request:
    paths:
      - .github/workflows/benchmarks.yaml
      - .github/workflows/python-tests.yaml
      - "src/prefect/**/*.py"
      - requirements.txt
      - requirements-dev.txt
      - setup.cfg
      - Dockerfile
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read

jobs:
  run-benchmarks:
    name: Benchmark
    # Runs with ephemeral API and SQLite database right now

    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        id: setup_python
        with:
          python-version: "3.12"

      - name: UV Cache
        uses: actions/cache@v4
        id: cache-uv
        with:
          path: ~/.cache/uv
          key: uvcache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('requirements-client.txt', 'requirements.txt', 'requirements-dev.txt') }}


      - name: Install packages
        run: |
          python -m pip install -U uv
          uv pip install --upgrade --system -e .[dev]

      - name: Prepare benchmark comparisons
        # Note: We use a "cache" instead of artifacts because artifacts are not available
        #       across workflow runs.
        id: bench-cache
        uses: actions/cache@v4
        with:
          path: ./.benchmarks
          # Pushes benchmark results for this branch and sha, this will always be a cache miss
          # and `restore-keys` will be used to get the benchmarks for comparison
          key: ${{ runner.os }}-${{ github.head_ref || 'main' }}-${{ github.sha }}
          # Pulls benchmark results for the base branch
          restore-keys: |
            ${{ runner.os }}-${{ github.base_ref }}-
            ${{ runner.os }}-main-

      - name: Start server
        run: |
          prefect server start&
          PREFECT_API_URL="http://127.0.0.1:4200/api" ./scripts/wait-for-server.py

          # TODO: Replace `wait-for-server` with dedicated command
          #       https://github.com/PrefectHQ/prefect/issues/6990

      - name: Run benchmarks
        uses: CodSpeedHQ/action@v2
        with:
          token: ${{ secrets.CODSPEED_TOKEN }}
          run: pytest benches --codspeed
